enum ProductSortField {
  price
  priceDesc
  discount
  discountDesc
  createdAt
  createdAtDesc
  stock
  stockDesc
}

type Color {
  name: String!
  hex: String!
}
input ProductFilter {
  minPrice: Int
  maxPrice: Int
  discount: Int
  category: [ID!]
  brand: [ID!]
  colors: [ID!]
  sizes: [String!]
  availableOnly: Boolean
  search: String
  minRating: Float
}
enum Gender {
  MALE
  FEMALE
}

enum Role {
  USER
  ADMIN
}

type User {
  id: ID!
  name: String!
  email: String!
  phone: String
  nationalCode: String
  gender: Gender
  photo: String
  role: Role!
  lastLogin: String
  createdAt: String!
  updatedAt: String!
}
type Product {
  id: ID!
  name: String!
  description: String!
  price: Int!
  discountedPrice: Int
  stock: Int!
  category: Category!
  images: [String!]!
  colors: [Color]
  sizes: [String!]!
  discountCode: String
  discount: Float
  comments: [Comment!]!
  createdAt: String!
  updatedAt: String!
}

type Comment {
  id: ID!
  content: String!
  rating: Int!
  product: Product!
  createdAt: String!
}

type Category {
  id: ID!
  name: String!
  products: [Product!]!
}
input OrderItemInput {
  productId: ID!
  variantId: ID
  quantity: Int!
  priceAtPurchase: Float!
}

input CreateOrderInput {
  items: [OrderItemInput!]!
  addressId: ID!
  discountCode: String
  deliveryDate: String!
  paymentMethod: PaymentMethod!
  shippingCost: Float!
  tax: Float!
  totalPrice: Float!
}
type Query {
  products(
    sortBy: ProductSortField
    filters: ProductFilter
    page: Int
    pageSize: Int
  ): [Product!]!
  getMe: User!
  product(id: ID!): Product
  categories: [Category!]!
}

type SignOutResponse {
  success: Boolean!
}

enum OrderStatus {
  PENDING
  PAID
  SHIPPED
  DELIVERED
  CANCELED
}

enum PaymentMethod {
  ONLINE
  CASH
}

type Order {
  id: ID!
  userId: ID!
  addressId: ID!
  deliveryDate: String!
  paymentMethod: PaymentMethod!
  shippingCost: Float!
  tax: Float!
  totalPrice: Float!
  status: OrderStatus!
  discountCodeId: ID
  createdAt: String!
  items: [OrderItem!]!
}

type OrderItem {
  id: ID!
  orderId: ID!
  productId: ID!
  variantId: ID
  quantity: Int!
  priceAtPurchase: Float!
}
type Mutation {
  addProduct(
    name: String!
    description: String!
    price: Int!
    stock: Int!
    categoryId: ID!
    images: [String!]!
    colors: [String!]!
    sizes: [String!]!
    discount: Float
    discountCode: String
  ): Product!

  signUp(name: String!, email: String!, password: String!): User!
  signIn(email: String!, password: String!): User!
  signOut: SignOutResponse!
  updateUser(
    id: String!
    name: String
    email: String
    phone: String
    nationalCode: String
    gender: Gender
  ): User!
  addComment(productId: ID!, content: String!, rating: Int!): Comment!
  createOrder(input: CreateOrderInput!): Order!

  addCategory(name: String!): Category!
}
