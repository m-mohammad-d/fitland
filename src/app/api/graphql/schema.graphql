enum SortOrder {
  ASC
  DESC
}

enum ProductSortField {
  price
  discount
  createdAt
  name
}

input ProductFilter {
  minPrice: Int
  maxPrice: Int
  discount: Int
  categoryId: ID
  colors: [String!]
  sizes: [String!]
  search: String
}

type Product {
  id: ID!
  name: String!
  description: String!
  price: Int!
  discountedPrice: Int
  stock: Int!
  category: Category!
  images: [String!]!
  colors: [String!]!
  sizes: [String!]!
  discountCode: String
  discount: Float
  comments: [Comment!]!
  createdAt: String!
  updatedAt: String!
}

type Comment {
  id: ID!
  content: String!
  rating: Int!
  product: Product!
  createdAt: String!
}

type Category {
  id: ID!
  name: String!
  products: [Product!]!
}

type Query {
  products(
    sortBy: ProductSortField
    order: SortOrder
    filters: ProductFilter
    page: Int
    pageSize: Int
  ): [Product!]!

  product(id: ID!): Product
  latestProduct: Product
  highestDiscountProduct: Product
  categories: [Category!]!
}

type Mutation {
  addProduct(
    name: String!
    description: String!
    price: Int!
    stock: Int!
    categoryId: ID!
    images: [String!]!
    colors: [String!]!
    sizes: [String!]!
    discount: Float
    discountCode: String
  ): Product!

  addComment(productId: ID!, content: String!, rating: Int!): Comment!

  addCategory(name: String!): Category!
}
